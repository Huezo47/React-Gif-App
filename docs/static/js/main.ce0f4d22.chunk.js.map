{"version":3,"sources":["AddCategory.js","GifRidItem.js","helpers/getGifs.js","GifRid.js","hooks/useFetchGif.js","GifApp.js","index.js"],"names":["AddCategory","setCategorias","useState","value","setValue","onSubmit","e","preventDefault","trim","length","c","type","onChange","target","GifRidItem","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","d","id","images","downsized_medium","GifRid","loading","state","setstate","useEffect","then","setTimeout","useFetchGif","img","GifApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,IAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,KAgB5C,OACI,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAeO,OAC9BN,EAAS,MAKT,SACI,uBACGO,KAAO,OAEPR,MAASA,EACTS,SAlBY,SAACN,GACpBF,EAASE,EAAEO,OAAOV,a,QCNbW,EAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGhC,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAEC,GACNhB,MAAOe,EAAEf,MACTC,IAAKc,EAAEE,OAAOC,iBAAiBjB,QAVpB,kBAcZY,GAdY,4CAAH,sDCIPM,EAAS,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EAEZnB,mBAAS,CAC7ByB,KAAM,GACNQ,SAAS,IAJuB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WACPlB,EAAQC,GACHkB,MAAK,SAAA7B,GACF8B,YAAW,WACPH,EAAS,CACLV,KAAMjB,EACNyB,SAAQ,MAEb,UAEZ,CAACd,IAEGe,EDhBgBK,CAAYpB,GAA7BM,EAF6B,EAE7BA,KAAMQ,EAFuB,EAEvBA,QAEZ,OACI,qCACA,mCAAOd,EAAP,OACEc,GAAW,cACb,qBAAKlB,UAAU,iCAAf,SAESU,EAAKE,KAAK,SAAAa,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIX,aEbhBY,EAAS,WAAO,IAAD,EAEWzC,mBAAS,CAAC,kBAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAIxB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEI2C,EAAWf,KAAI,SAAAR,GAAS,OACtB,cAAC,EAAD,CAEEA,UAAWA,GADNA,YCZvBwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce0f4d22.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [value, setValue] = useState('') \r\n    \r\n    const handleOnChange = (e) => {\r\n        setValue(e.target.value)\r\n    };\r\n    \r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value.trim().length > 2) {\r\n        setCategorias(c => [value, ...c]);\r\n        setValue('')\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input \r\n               type = 'Text'\r\n               //placeholder = {value}\r\n               value = {value}\r\n               onChange = {handleOnChange}\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: propTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifRidItem = ({ title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate_animated animate__bounceIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n","\r\nexport const getGifs = async(categoria)=> {\r\n         \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=or9x1i0KKZ9S8LwjfAJTWZ6VMHZ2aNnq`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(d => {\r\n        return {\r\n            id: d.id,\r\n            title: d.title,\r\n            url: d.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n};","import React, {useEffect, useState} from 'react'\r\nimport { GifRidItem } from './GifRidItem';\r\nimport { getGifs } from './helpers/getGifs';\r\nimport { useFetchGif } from './hooks/useFetchGif';\r\n\r\nexport const GifRid = ({categoria}) => {\r\n\r\n   const {data, loading} = useFetchGif(categoria)\r\n    \r\n    return (\r\n        <>\r\n        <h3> { categoria } </h3>\r\n        { loading && 'Cargando...' }\r\n        <div className='card-grid animate__fadeOutDown' >\r\n             {\r\n                 data.map( img => (\r\n                 <GifRidItem \r\n                    key={img.id}\r\n                    {...img} \r\n                 />\r\n                 ))\r\n             }\r\n        </div>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGif = (categoria) => {\r\n    \r\n    const [state, setstate] = useState({\r\n          data: [],\r\n          loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then(c=>{\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: c,\r\n                        loading:false\r\n                    })\r\n                }, 2000); \r\n        })\r\n    }, [categoria]); \r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifRid } from './GifRid'\r\n\r\nexport const GifApp = () => {\r\n\r\n   const [categorias, setCategorias] = useState(['Final Fantasy'])\r\n\r\n    return (\r\n        <>\r\n          <h1>GiExpertfApp</h1>  \r\n          <AddCategory setCategorias = {setCategorias}/>\r\n          <hr />\r\n          <ol>\r\n            {\r\n              categorias.map(categoria => (\r\n                <GifRid \r\n                  key={categoria}\r\n                  categoria={categoria} \r\n                  />\r\n              ))\r\n            }\r\n          </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifApp } from './GifApp';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}